{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "/"
        }
    ],
    "info": {
        "description": "API service to create and manage DIDs and credentials on cheqd network.",
        "version": "2.0.0",
        "title": "Credential Service for cheqd network"
    },
    "tags": [
        {
            "name": "Credential",
            "externalDocs": {
                "url": "https://github.com/cheqd/credential-service#readme"
            }
        }
    ],
    "paths": {
        "/key/create": {
            "post": {
                "tags": [
                    "Key"
                ],
                "summary": "Create a Keypair",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KeyResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "A problem with the input fields has occurred. Additional state information plus metadata may be available in the response body.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidRequest"
                                },
                                "example": {
                                    "error": "Invalid Request"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/schemas/UnauthorizedError"
                    },
                    "500": {
                        "description": "An internal error has occurred. Additional state information plus metadata may be available in the response body.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidRequest"
                                },
                                "example": {
                                    "error": "Internal Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/key/{kid}": {
            "get": {
                "tags": [
                    "Key"
                ],
                "summary": "Fetch keypair",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "kid",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KeyResult"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/schemas/UnauthorizedError"
                    },
                    "500": {
                        "description": "An internal error has occurred. Additional state information plus metadata may be available in the response body.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidRequest"
                                },
                                "example": {
                                    "error": "Internal Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/did/create": {
            "post": {
                "tags": [
                    "DID"
                ],
                "summary": "Create a DID",
                "description": "<p>This endpoint creates a DID by taking DID document or a verification method as an input.</p>",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "options"
                                ],
                                "properties": {
                                    "options": {
                                        "type": "object",
                                        "properties": {
                                            "network": {
                                                "type": "string",
                                                "enum": [
                                                    "testnet",
                                                    "mainnet"
                                                ]
                                            },
                                            "methodSpecificIdAlgo": {
                                                "type": "string",
                                                "enum": [
                                                    "uuid",
                                                    "base58btc"
                                                ]
                                            }
                                        }
                                    },
                                    "secret": {
                                        "type": "object",
                                        "properties": {
                                            "verificationMethod": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "Ed25519VerificationKey2020",
                                                            "JsonWebKey2020",
                                                            "Ed25519VerificationKey2018"
                                                        ]
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "example": "key-1"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "didDocument": {
                                        "$ref": "#/components/schemas/DidDocument"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DidResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "A problem with the input fields has occurred. Additional state information plus metadata may be available in the response body.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidRequest"
                                },
                                "example": {
                                    "error": "Invalid Request"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/schemas/UnauthorizedError"
                    },
                    "500": {
                        "description": "An internal error has occurred. Additional state information plus metadata may be available in the response body.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidRequest"
                                },
                                "example": {
                                    "error": "Internal Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/did/list": {
            "get": {
                "tags": [
                    "DID"
                ],
                "summary": "Fetch DIDs from wallet",
                "description": "<p>This endpoint creates a DID by taking DID document as an input.</p>",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "A problem with the input fields has occurred. Additional state information plus metadata may be available in the response body.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidRequest"
                                },
                                "example": {
                                    "error": "Invalid Request"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/schemas/UnauthorizedError"
                    },
                    "500": {
                        "description": "An internal error has occurred. Additional state information plus metadata may be available in the response body.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidRequest"
                                },
                                "example": {
                                    "error": "Internal Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/did/{did}": {
            "get": {
                "tags": [
                    "DID"
                ],
                "summary": "Fetch DIDs from wallet",
                "description": "<p>This endpoint creates a DID by taking DID document as an input.</p>",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "did",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DidDocument"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "A problem with the input fields has occurred. Additional state information plus metadata may be available in the response body.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidRequest"
                                },
                                "example": {
                                    "error": "Invalid Request"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/schemas/UnauthorizedError"
                    },
                    "500": {
                        "description": "An internal error has occurred. Additional state information plus metadata may be available in the response body.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidRequest"
                                },
                                "example": {
                                    "error": "Internal Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/credential/issue": {
            "post": {
                "tags": [
                    "Credential"
                ],
                "summary": "Issue a credential",
                "description": "<p>This endpoint creates a DID. As input it takes the list of attributes, subjectDid, context and expiration date of the credential to be issued.</p>",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CredentialRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Credential"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "A problem with the input fields has occurred. Additional state information plus metadata may be available in the response body.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidRequest"
                                },
                                "example": {
                                    "error": "Invalid Request"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/schemas/UnauthorizedError"
                    },
                    "500": {
                        "description": "An internal error has occurred. Additional state information plus metadata may be available in the response body.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidRequest"
                                },
                                "example": {
                                    "error": "Internal Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/credential/verify": {
            "post": {
                "tags": [
                    "Credential"
                ],
                "summary": "Verify a credential",
                "description": "<p>This endpoint verifies the credential. As input it takes the entire credential itself or just the JWT string</p>",
                "operationId": "verify",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "credential": {
                                        "type": "string",
                                        "example": "<Place the credential object or JWT string here>"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IVerifyResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "A problem with the input fields has occurred. Additional state information plus metadata may be available in the response body.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidRequest"
                                },
                                "example": {
                                    "error": "Invalid Request"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/schemas/UnauthorizedError"
                    },
                    "500": {
                        "description": "An internal error has occurred. Additional state information plus metadata may be available in the response body.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidRequest"
                                },
                                "example": {
                                    "error": "Internal Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/account": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Create a client",
                "description": "<p>This endpoint verifies the JWT token and creates a customer if they don't exist</p>",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "A problem with the input fields has occurred. Additional state information plus metadata may be available in the response body.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidRequest"
                                },
                                "example": {
                                    "error": "Invalid Request"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/schemas/UnauthorizedError"
                    },
                    "500": {
                        "description": "An internal error has occurred. Additional state information plus metadata may be available in the response body.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidRequest"
                                },
                                "example": {
                                    "error": "Internal Error"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Fetch a client",
                "description": "<p>This endpoint verifies the JWT token and creates a customer if they don't exist</p>",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "A problem with the input fields has occurred. Additional state information plus metadata may be available in the response body.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidRequest"
                                },
                                "example": {
                                    "error": "Invalid Request"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/schemas/UnauthorizedError"
                    },
                    "500": {
                        "description": "An internal error has occurred. Additional state information plus metadata may be available in the response body.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidRequest"
                                },
                                "example": {
                                    "error": "Internal Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{did}/create-resource": {
            "post": {
                "tags": [
                    "Resource"
                ],
                "summary": "Create a Resource",
                "parameters": [
                    {
                        "in": "path",
                        "name": "did",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateResourceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The resource is created successfully"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "DidResult": {
                "type": "object",
                "properties": {
                    "did": {
                        "type": "string"
                    },
                    "controllerKeyId": {
                        "type": "string"
                    },
                    "keys": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Service"
                        }
                    }
                }
            },
            "KeyResult": {
                "type": "object",
                "properties": {
                    "kid": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "Ed25519",
                            "Secp256k1"
                        ]
                    },
                    "publicKeyHex": {
                        "type": "string"
                    }
                }
            },
            "DidDocument": {
                "description": "This input field contains either a complete DID document, or an incremental change (diff) to a DID document. See <a href=\"https://identity.foundation/did-registration/#diddocument\">https://identity.foundation/did-registration/#diddocument</a>.",
                "type": "object",
                "properties": {
                    "context": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "example": "did:cheqd:testnet:ca9ff47c-0286-4614-a4be-8ffa83911e09"
                    },
                    "controller": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "did:cheqd:testnet:ca9ff47c-0286-4614-a4be-8ffa83911e09"
                        ]
                    },
                    "authentication": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "did:cheqd:testnet:ca9ff47c-0286-4614-a4be-8ffa83911e09#key-0"
                        ]
                    },
                    "assertionMethod": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "capabilityInvocation": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "capabilityDelegation": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "keyAgreement": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "verificationMethod": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VerificationMethod"
                        }
                    },
                    "service": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Service"
                        }
                    }
                },
                "example": {
                    "id": "did:cheqd:testnet:ca9ff47c-0286-4614-a4be-8ffa83911e09",
                    "controller": [
                        "did:cheqd:testnet:ca9ff47c-0286-4614-a4be-8ffa83911e09"
                    ],
                    "verificationMethod": [
                        {
                            "id": "did:cheqd:testnet:ca9ff47c-0286-4614-a4be-8ffa83911e09#key-1",
                            "type": "Ed25519VerificationKey2020",
                            "controller": "did:cheqd:testnet:ca9ff47c-0286-4614-a4be-8ffa83911e09",
                            "publicKeyMultibase": "z6Mkt9Vg1a1Jbg5a1NkToUeWH23Z33TwGUua5MrqAYUz2AL3"
                        }
                    ],
                    "authentication": [
                        "did:cheqd:testnet:ca9ff47c-0286-4614-a4be-8ffa83911e09#key-1"
                    ]
                }
            },
            "VerificationMethod": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "did:cheqd:testnet:ca9ff47c-0286-4614-a4be-8ffa83911e09#key-0"
                    },
                    "type": {
                        "type": "string",
                        "example": "Ed25519VerificationKey2020"
                    },
                    "controller": {
                        "type": "string",
                        "example": "did:cheqd:testnet:ca9ff47c-0286-4614-a4be-8ffa83911e09"
                    },
                    "publicKeyMultibase": {
                        "type": "string",
                        "example": "z6Mkt9Vg1a1Jbg5a1NkToUeWH23Z33TwGUua5MrqAYUz2AL3"
                    },
                    "publicKeyJwk": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Service": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "did:cheqd:testnet:ca9ff47c-0286-4614-a4be-8ffa83911e09#rand,"
                    },
                    "type": {
                        "type": "string",
                        "example": "rand,"
                    },
                    "serviceEndpoint": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "https://rand.in"
                        ]
                    }
                }
            },
            "CredentialRequest": {
                "description": "Input fields for the create operation.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "issuerDid": {
                        "description": "This input field is the Issuer's DID",
                        "type": "string"
                    },
                    "subjectDid": {
                        "description": "This input field is the holder's DID",
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object"
                    },
                    "@context": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "expirationDate": {
                        "type": "string"
                    },
                    "format": {
                        "type": "string",
                        "enum": [
                            "jwt",
                            "lds"
                        ]
                    }
                },
                "required": [
                    "issuerDid",
                    "subjectDid",
                    "attributes"
                ],
                "example": {
                    "issuerDid": "did:cheqd:testnet:ca9ff47c-0286-4614-a4be-8ffa83911e09",
                    "subjectDid": "did:key:z6MkhaXgBZDvotDkL5257faiztiGiC2QtKLGpbnnEGta2doK",
                    "attributes": {
                        "gender": "male",
                        "name": "Bob"
                    },
                    "@context": [
                        "https://schema.org/Person"
                    ],
                    "type": [
                        "Person"
                    ],
                    "format": "jwt"
                }
            },
            "Credential": {
                "description": "Input fields for the update operation.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "@context": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "expirationDate": {
                        "type": "string"
                    },
                    "issuer": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            }
                        }
                    },
                    "credentialSubject": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            }
                        }
                    },
                    "issuanceDate": {
                        "type": "string"
                    },
                    "proof": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "jwt": {
                                "type": "string"
                            }
                        }
                    }
                },
                "example": {
                    "@context": [
                        "https://www.w3.org/2018/credentials/v1",
                        "https://schema.org/Person"
                    ],
                    "type": [
                        "VerifiableCredential",
                        "Person"
                    ],
                    "issuer": {
                        "id": "did:cheqd:mainnet:8790869e-624c-4325-98df-c30e0e473228"
                    },
                    "credentialSubject": {
                        "id": "did:key:z6MkhaXgBZDvotDkL5257faiztiGiC2QtKLGpbnnEGta2doK",
                        "gender": "male",
                        "name": "Bob"
                    },
                    "issuanceDate": "2023-03-22T07:00:47.749Z",
                    "proof": {
                        "type": "JwtProof2020",
                        "jwt": "eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJ2YyI6eyJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy92MSIsImh0dHBzOi8vc2NoZW1hLm9yZy9QZXJzb24iLCJodHRwczovL3ZlcmFtby5pby9jb250ZXh0cy9wcm9maWxlL3YxIl0sInR5cGUiOlsiVmVyaWZpYWJsZUNyZWRlbnRpYWwiLCJQZXJzb24iXSwiY3JlZGVudGlhbFN1YmplY3QiOnsiaWQiOiJkaWQ6a2V5Ono2TWtoYVhnQlpEdm90RGtMNTI1N2ZhaXp0aUdpQzJRdEtMR3Bibm5FR3RhMmRvSyIsImdlbmRlciI6Im1hbGUiLCJuYW1lIjoiQm9iIn19LCJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy92MSIsImh0dHBzOi8vc2NoZW1hLm9yZy9QZXJzb24iLCJodHRwczovL3ZlcmFtby5pby9jb250ZXh0cy9wcm9maWxlL3YxIl0sInR5cGUiOlsiVmVyaWZpYWJsZUNyZWRlbnRpYWwiLCJQZXJzb24iXSwiaXNzdWVyIjp7ImlkIjoiZGlkOmNoZXFkOnRlc3RuZXQ6MzFmYjVmYzEtMGQyNC00M2Y5LTg3MGYtYmU4YjZiNmI5YzMzIn0sImNyZWRlbnRpYWxTdWJqZWN0Ijp7ImlkIjoiZGlkOmtleTp6Nk1raGFYZ0JaRHZvdERrTDUyNTdmYWl6dGlHaUMyUXRLTEdwYm5uRUd0YTJkb0siLCJnZW5kZXIiOiJtYWxlIiwibmFtZSI6IkJvYiJ9LCJpc3N1YW5jZURhdGUiOiIyMDIzLTA1LTEyVDEyOjQ4OjE2LjU1NloiLCJzdWIiOiJkaWQ6a2V5Ono2TWtoYVhnQlpEdm90RGtMNTI1N2ZhaXp0aUdpQzJRdEtMR3Bibm5FR3RhMmRvSyIsIm5iZiI6MTY4Mzg5NTY5NiwiaXNzIjoiZGlkOmNoZXFkOnRlc3RuZXQ6MzFmYjVmYzEtMGQyNC00M2Y5LTg3MGYtYmU4YjZiNmI5YzMzIn0.MP2MvNnjxGXNKqT4itdEfRBd82nad30-a4-BupjskETb-10-Kyj94b5FDMxdwe3HQ39ztNwFRj3TPFiZS8z1Bw"
                    }
                }
            },
            "Customer": {
                "type": "object",
                "properties": {
                    "customerId": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    }
                }
            },
            "InvalidRequest": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string"
                    }
                }
            },
            "UnauthorizedError": {
                "description": "Access token is missing or invalid",
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string"
                    }
                },
                "example": {
                    "error": "Unauthorized Error"
                }
            },
            "IVerifyResult": {
                "type": "object",
                "properties": {
                    "verified": {
                        "type": "boolean"
                    },
                    "didResolutionResult": {
                        "type": "object"
                    },
                    "issuer": {
                        "type": "string"
                    },
                    "signer": {
                        "type": "object"
                    },
                    "jwt": {
                        "type": "string"
                    },
                    "verifiableCredential": {
                        "type": "object"
                    }
                },
                "example": {
                    "verified": true,
                    "didResolutionResult": {
                        "didDocumentMetadata": {
                            "created": "2023-03-17T10:36:09.353270749Z",
                            "updated": "1970-01-01T00:00:00Z",
                            "versionId": "5181e19a-7f2c-4c02-b033-dd739811e893"
                        },
                        "didResolutionMetadata": {
                            "contentType": "application/did+ld+json",
                            "retrieved": "2023-03-22T07:10:59Z",
                            "did": {
                                "didString": "did:cheqd:mainnet:8790869e-624c-4325-98df-c30e0e473228",
                                "methodSpecificId": "8790869e-624c-4325-98df-c30e0e473228",
                                "method": "cheqd"
                            }
                        },
                        "didDocument": {
                            "@context": [
                                "https://www.w3.org/ns/did/v1",
                                "https://w3id.org/security/suites/ed25519-2018/v1"
                            ],
                            "id": "did:cheqd:mainnet:8790869e-624c-4325-98df-c30e0e473228",
                            "verificationMethod": [
                                {
                                    "id": "did:cheqd:mainnet:8790869e-624c-4325-98df-c30e0e473228#key-1",
                                    "type": "Ed25519VerificationKey2018",
                                    "controller": "did:cheqd:mainnet:8790869e-624c-4325-98df-c30e0e473228",
                                    "publicKeyBase58": "334yXce19pCbMskUtTmgouKmY9SKMoo8XmZMS1tG6aZx"
                                }
                            ],
                            "authentication": [
                                "did:cheqd:mainnet:8790869e-624c-4325-98df-c30e0e473228#key-1"
                            ],
                            "assertionMethod": [
                                "did:cheqd:mainnet:8790869e-624c-4325-98df-c30e0e473228#key-1"
                            ]
                        },
                        "@context": "https://w3id.org/did-resolution/v1"
                    },
                    "issuer": "did:cheqd:mainnet:8790869e-624c-4325-98df-c30e0e473228",
                    "signer": {
                        "id": "did:cheqd:mainnet:8790869e-624c-4325-98df-c30e0e473228#key-1",
                        "type": "Ed25519VerificationKey2018",
                        "controller": "did:cheqd:mainnet:8790869e-624c-4325-98df-c30e0e473228",
                        "publicKeyBase58": "334yXce19pCbMskUtTmgouKmY9SKMoo8XmZMS1tG6aZx"
                    },
                    "jwt": "eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJ2YyI6eyJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy92MSIsImh0dHBzOi8vc2NoZW1hLm9yZy9QZXJzb24iLCJodHRwczovL3ZlcmFtby5pby9jb250ZXh0cy9wcm9maWxlL3YxIl0sInR5cGUiOlsiVmVyaWZpYWJsZUNyZWRlbnRpYWwiLCJQZXJzb24iXSwiY3JlZGVudGlhbFN1YmplY3QiOnsiaWQiOiJkaWQ6a2V5Ono2TWtoYVhnQlpEdm90RGtMNTI1N2ZhaXp0aUdpQzJRdEtMR3Bibm5FR3RhMmRvSyIsImdlbmRlciI6Im1hbGUiLCJuYW1lIjoiQm9iIn19LCJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy92MSIsImh0dHBzOi8vc2NoZW1hLm9yZy9QZXJzb24iLCJodHRwczovL3ZlcmFtby5pby9jb250ZXh0cy9wcm9maWxlL3YxIl0sInR5cGUiOlsiVmVyaWZpYWJsZUNyZWRlbnRpYWwiLCJQZXJzb24iXSwiaXNzdWVyIjp7ImlkIjoiZGlkOmNoZXFkOnRlc3RuZXQ6MzFmYjVmYzEtMGQyNC00M2Y5LTg3MGYtYmU4YjZiNmI5YzMzIn0sImNyZWRlbnRpYWxTdWJqZWN0Ijp7ImlkIjoiZGlkOmtleTp6Nk1raGFYZ0JaRHZvdERrTDUyNTdmYWl6dGlHaUMyUXRLTEdwYm5uRUd0YTJkb0siLCJnZW5kZXIiOiJtYWxlIiwibmFtZSI6IkJvYiJ9LCJpc3N1YW5jZURhdGUiOiIyMDIzLTA1LTEyVDEyOjQ4OjE2LjU1NloiLCJzdWIiOiJkaWQ6a2V5Ono2TWtoYVhnQlpEdm90RGtMNTI1N2ZhaXp0aUdpQzJRdEtMR3Bibm5FR3RhMmRvSyIsIm5iZiI6MTY4Mzg5NTY5NiwiaXNzIjoiZGlkOmNoZXFkOnRlc3RuZXQ6MzFmYjVmYzEtMGQyNC00M2Y5LTg3MGYtYmU4YjZiNmI5YzMzIn0.MP2MvNnjxGXNKqT4itdEfRBd82nad30-a4-BupjskETb-10-Kyj94b5FDMxdwe3HQ39ztNwFRj3TPFiZS8z1Bw",
                    "policies": {},
                    "verifiableCredential": {
                        "@context": [
                            "https://www.w3.org/2018/credentials/v1",
                            "https://veramo.io/contexts/profile/v1"
                        ],
                        "type": [
                            "VerifiableCredential"
                        ],
                        "issuer": {
                            "id": "did:cheqd:mainnet:8790869e-624c-4325-98df-c30e0e473228"
                        },
                        "credentialSubject": {
                            "id": "did:key:z6MkrMspwyE1z2XkfcDafXAhgKYJ8nbSNCfZzB8WiZcvrLkF"
                        },
                        "issuanceDate": "2023-03-21T13:24:04.305Z",
                        "reservationId": "123",
                        "reservationStatus": "https://schema.org/ReservationConfirmed",
                        "provider": {
                            "brand": "EventBrite",
                            "image": "/did:cheqd:testnet:f41e48cc-0ab4-4750-9ba9-6ff9e5c8006c/resources/"
                        },
                        "reservationFor": {
                            "@type": "Event",
                            "name": "Internet Identity Workshop IIWXXXV",
                            "startDate": "2022-11-16T16:00:00",
                            "endDate": "2022-11-18T00:00:00",
                            "location": "Computer History Museum, 1401 N Shoreline Blvd, Mountain View, CA 94043",
                            "logo": "/did:cheqd:testnet:f41e48cc-0ab4-4750-9ba9-6ff9e5c8006c/resources/"
                        },
                        "sub": "did:key:z6MkrMspwyE1z2XkfcDafXAhgKYJ8nbSNCfZzB8WiZcvrLkF",
                        "nbf": 1679405044,
                        "iss": "did:cheqd:mainnet:8790869e-624c-4325-98df-c30e0e473228",
                        "proof": {
                            "type": "JwtProof2020",
                            "jwt": "eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJ2YyI6eyJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy92MSIsImh0dHBzOi8vc2NoZW1hLm9yZy9QZXJzb24iLCJodHRwczovL3ZlcmFtby5pby9jb250ZXh0cy9wcm9maWxlL3YxIl0sInR5cGUiOlsiVmVyaWZpYWJsZUNyZWRlbnRpYWwiLCJQZXJzb24iXSwiY3JlZGVudGlhbFN1YmplY3QiOnsiaWQiOiJkaWQ6a2V5Ono2TWtoYVhnQlpEdm90RGtMNTI1N2ZhaXp0aUdpQzJRdEtMR3Bibm5FR3RhMmRvSyIsImdlbmRlciI6Im1hbGUiLCJuYW1lIjoiQm9iIn19LCJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy92MSIsImh0dHBzOi8vc2NoZW1hLm9yZy9QZXJzb24iLCJodHRwczovL3ZlcmFtby5pby9jb250ZXh0cy9wcm9maWxlL3YxIl0sInR5cGUiOlsiVmVyaWZpYWJsZUNyZWRlbnRpYWwiLCJQZXJzb24iXSwiaXNzdWVyIjp7ImlkIjoiZGlkOmNoZXFkOnRlc3RuZXQ6MzFmYjVmYzEtMGQyNC00M2Y5LTg3MGYtYmU4YjZiNmI5YzMzIn0sImNyZWRlbnRpYWxTdWJqZWN0Ijp7ImlkIjoiZGlkOmtleTp6Nk1raGFYZ0JaRHZvdERrTDUyNTdmYWl6dGlHaUMyUXRLTEdwYm5uRUd0YTJkb0siLCJnZW5kZXIiOiJtYWxlIiwibmFtZSI6IkJvYiJ9LCJpc3N1YW5jZURhdGUiOiIyMDIzLTA1LTEyVDEyOjQ4OjE2LjU1NloiLCJzdWIiOiJkaWQ6a2V5Ono2TWtoYVhnQlpEdm90RGtMNTI1N2ZhaXp0aUdpQzJRdEtMR3Bibm5FR3RhMmRvSyIsIm5iZiI6MTY4Mzg5NTY5NiwiaXNzIjoiZGlkOmNoZXFkOnRlc3RuZXQ6MzFmYjVmYzEtMGQyNC00M2Y5LTg3MGYtYmU4YjZiNmI5YzMzIn0.MP2MvNnjxGXNKqT4itdEfRBd82nad30-a4-BupjskETb-10-Kyj94b5FDMxdwe3HQ39ztNwFRj3TPFiZS8z1Bw"
                        }
                    }
                }
            },
            "CreateResourceRequest": {
                "description": "Input fields for the resource creation",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "jobId": {
                        "description": "This input field is used to keep track of an ongoing DID deactivation process. See <a href=\"https://identity.foundation/did-registration/#jobid\">https://identity.foundation/did-registration/#jobid</a>.",
                        "type": "string"
                    },
                    "data": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "alsoKnownAs": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "uri": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "example": {
                    "data": "SGVsbG8gV29ybGQ=",
                    "name": "ResourceName",
                    "type": "TextDocument"
                }
            }
        }
    }
}