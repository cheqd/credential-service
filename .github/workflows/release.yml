name: "Release"
on:
  workflow_call:
defaults:
  run:
    shell: bash
permissions:
  contents: write
  packages: write


jobs:
  release:
    name: "Semantic Release"
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.set-version.outputs.VERSION }}

    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
      
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      
      - name: "Obtain Github App token"
        id: app-token
        uses: getsentry/action-github-app-token@v1.0.6
        with:
          app_id: ${{ secrets.BOT_APP_ID }}
          private_key: ${{ secrets.BOT_APP_PRIVATE_KEY }}

      - name: "Clean install dependencies"
        run: npm ci

      - name: "Build"
        run: npm run build

      - name: "Execute Semantic Release"
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set version number
        id: set-version
        run: |
          VERSION=$( git describe --tags ${{ github.sha }})
          echo ::set-output name=VERSION::"$VERSION"
 
  release-docker:
    name: "Release Docker image"
    needs: release
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ github.repository }}
    environment: 
      name: production

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true
          version: latest

      - name: Install DigitalOcean CLI
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Login to DOCR
        run: doctl registry login --expiry-seconds 600
      
      - name: Configure Docker image metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            registry.digitalocean.com/${{ env.IMAGE_NAME }}
          flavor: |
            latest=auto
          tags: |
            type=semver,pattern={{version}},value=${{ needs.release.outputs.VERSION }}
            type=raw,value=production-latest
            type=sha,format=long
          labels: |
            org.opencontainers.image.description="Cheqd Credential Service"
            org.opencontainers.image.source="https://github.com/cheqd/credential-service"
            org.opencontainers.image.vendor="Cheqd Foundation Limited"
            org.opencontainers.image.created={{date 'dddd, MMMM Do YYYY, h:mm:ss a'}}
            org.opencontainers.image.documentation="https://docs.cheqd.io/node"
      - name: Build image with labels
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Push image to DigitalOcean Container Registry
        run: docker image push --all-tags registry.digitalocean.com/${{ github.repository }}
