name: 'Build'
on:
    workflow_call:
defaults:
    run:
        shell: bash

jobs:
    build-node:
        name: 'Build Node.js'
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3

            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: 'npm'

            - name: 'Clean install dependencies'
              run: npm ci

            - name: 'Run npm build'
              run: npm run build

            - name: Install Playwright Browsers
              run: npx playwright install --with-deps

            - name: Run Playwright tests
              run: npm run test
              env:
                CI: true
                COOKIE_SECRET: ${{ secrets.COOKIE_SECRET }}
                EXTERNAL_DB_CERT: ${{ secrets.EXTERNAL_DB_CERT }}
                EXTERNAL_DB_CONNECTION_URL: ${{ secrets.EXTERNAL_DB_CONNECTION_URL }}
                EXTERNAL_DB_ENCRYPTION_KEY: ${{ secrets.EXTERNAL_DB_ENCRYPTION_KEY }}
                LOGTO_APP_SECRET: ${{ secrets.LOGTO_APP_SECRET }}
                LOGTO_M2M_APP_SECRET: ${{ secrets.LOGTO_M2M_APP_SECRET }}
                LOGTO_WEBHOOK_SECRET: ${{ secrets.LOGTO_WEBHOOK_SECRET }}
                POLYGON_PRIVATE_KEY: ${{ secrets.POLYGON_PRIVATE_KEY }}
                VERIDA_PRIVATE_KEY: ${{ secrets.VERIDA_PRIVATE_KEY }}
                TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
                TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}

                APPLICATION_BASE_URL: ${{ vars.APPLICATION_BASE_URL }}
                ENABLE_AUTHENTICATION: ${{ vars.ENABLE_AUTHENTICATION }}
                ENABLE_EXTERNAL_DB: ${{ vars.ENABLE_EXTERNAL_DB }}
                ENABLE_VERIDA_CONNECTOR: ${{ vars.ENABLE_VERIDA_CONNECTOR }}
                LOGTO_APP_ID: ${{ vars.LOGTO_APP_ID }}
                LOGTO_DEFAULT_RESOURCE_URL: ${{ vars.LOGTO_DEFAULT_RESOURCE_URL }}
                LOGTO_DEFAULT_ROLE_ID: ${{ vars.LOGTO_DEFAULT_ROLE_ID }}
                LOGTO_ENDPOINT: ${{ vars.LOGTO_ENDPOINT }}
                LOGTO_M2M_APP_ID: ${{ vars.LOGTO_M2M_APP_ID }}
                LOGTO_MANAGEMENT_API: ${{ vars.LOGTO_MANAGEMENT_API }}
                MAINNET_RPC_URL: ${{ vars.MAINNET_RPC_URL }}
                RESOLVER_URL: ${{ vars.RESOLVER_URL }}
                TESTNET_RPC_URL: ${{ vars.TESTNET_RPC_URL }}
                VERIDA_NETWORK: ${{ vars.VERIDA_NETWORK }}

            - uses: actions/upload-artifact@v3
              if: always()
              with:
                name: playwright-report
                path: playwright-report/
                retention-days: 14

    build-docker:
        name: 'Build Docker image'
        runs-on: ubuntu-latest
        env:
            IMAGE_NAME: ${{ github.repository }}

        steps:
            - uses: actions/checkout@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
              id: buildx
              with:
                  install: true
                  version: latest

            - name: Configure Docker image metadata
              id: meta
              uses: docker/metadata-action@v4
              with:
                  images: |
                      ${{ env.IMAGE_NAME }}
                      ghcr.io/${{ env.IMAGE_NAME }}
                      registry.digitalocean.com/${{ env.IMAGE_NAME }}
                  tags: |
                      type=ref,event=branch
                      type=raw,value=staging-latest
                      type=sha,format=long

            - name: Build image
              uses: docker/build-push-action@v4
              with:
                  context: .
                  file: docker/Dockerfile
                  platforms: linux/amd64
                  load: true
                  target: runner
                  tags: ${{ steps.meta.outputs.tags }}
                  outputs: type=docker,dest=credential-service-staging.tar
                  cache-from: type=gha
                  cache-to: type=gha,mode=min

            - name: Upload build image as artifact
              uses: actions/upload-artifact@v3
              with:
                  name: credential-service-staging
                  path: credential-service-staging.tar
